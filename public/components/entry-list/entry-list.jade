.panel.panel-default
  .panel-heading(ng-show="entries")

    button.btn.btn-default.btn-xs.list-option(type="button", ng-click="selectAllEntries()") select all
    button.btn.btn-default.btn-xs.list-option(type="button", ng-click="deselectAllEntries()") deselect all

    div.btn-group.add-to-list-btn.list-option
      button.btn.btn-default.btn-xs.dropdown-toggle(type="button", data-toggle="dropdown")
        span {{ isSavedListView ? 'copy' : 'add selected entries to list' }}
        span.caret
      ul.dropdown-menu
        li.dropdown-header(ng-show="isSavedListView") copy selected entries to list:
        li(ng-show="sharedListModel.listsLoading")
          span loading lists...
        li(ng-repeat="list in sharedListModel.myLists")
          a(ng-click="addSelectedEntriesToList(list)") {{ list.name }}
        li.divider(role="separator")
        li.dropdown-header or {{ isSavedListView ? 'copy' : 'add' }} to a new list:
        li
          form.input-group.input-group-sm
            input.form-control(type="text", placeholder="new list name", ng-model="viewModel.newListName")
            span.input-group-btn
              button.btn.btn-default(type="submit", ng-disabled="!viewModel.newListName", ng-click="addSelectedEntriesToNewList()") create & {{ isSavedListView ? 'copy' : 'add' }}

    button.btn.btn-warning.btn-xs.list-option(type="button", ng-show="isSavedListView", ng-click="removeSelectedEntriesFromList()") remove

    div.btn-group.list-option
      button.btn.btn-default.btn-xs.dropdown-toggle(type="button", data-toggle="dropdown")
        span sort by...
        span.caret
      ul.dropdown-menu
        li(ng-repeat="dimension in sortModel.activeSortableDimensions")
          a(ng-click="sortModel.dimension = dimension.sorting;", ng-class="{ 'bg-info' : sortModel.dimension === dimension.sorting }") {{ dimension.label }}
        li.divider
        li
          a(ng-click="sortModel.dimension = 'index'", ng-class="{ 'bg-info' : sortModel.dimension === 'index' }") Index
        li.divider
        li
          .checkbox.entry-order-checkbox
            label
              input(type="checkbox", ng-model="sortModel.reverseSorting")
              div reverse order

    button#export-button.btn.btn-default.btn-xs.pull-right(data-loading-text="loading...", ng-click="export()", ng-disabled="!entries.length")
      i.fa.fa-download.margin-right
      | export results

    div#duplicate-button.btn-group.add-to-list-btn.pull-right(ng-show="isSavedListView")
      button.btn.btn-default.btn-xs.dropdown-toggle(type="button", data-toggle="dropdown")
        span duplicate list
        span.caret
      ul.dropdown-menu
        li
          form.input-group.input-group-sm
            input.form-control(type="text", placeholder="new list name", ng-model="viewModel.newListName")
            span.input-group-btn
              button.btn.btn-default(type="submit", ng-disabled="!viewModel.newListName", ng-click="handleDuplicateListClick()") duplicate

    button.btn.btn-danger.btn-xs.pull-right(type="button", ng-show="isSavedListView", ng-click="deleteList()") delete this list

  .panel-body.text-center(ng-show="!entries") Loading entries...
  .panel-body.text-center(ng-show="entries && !entries.length") No entries.
  .panel-body(ng-show="entries && entries.length")
    table.table.table-hover
      tbody.entry-row
        tr(ng-repeat="entry in entries | orderBy : sortModel.dimension : sortModel.reverseSorting | limitTo : entriesPerPage : entriesPerPage * pageNumber", ng-class="{ warning: entry.selected }")
          td.entry-checkbox
            input(type="checkbox", ng-model="entry.selected")
          td.entry-list-item
            a(ng-href="#/entries/{{entry.index}}")
              span.add-to-list-label.label.label-success(ng-show="entry.addedToList") Added to list
              span.add-to-list-label.label.label-info(ng-show="entry.alreadyInList") Already in list
              h4 {{ entry.fullName }}
              p {{ entry.biography.slice(0, 200) }} ...
  
  .panel-footer.page-controls(ng-show="entries && entries.length")
    a(ng-click="setPage(0)", ng-disabled="isPage(0)") << first page
    a(ng-click="setPage(pageNumber - 1)", ng-disabled="isPage(0)") < previous page
    
    a.page-number(
      ng-repeat="p in getPages() | limitTo : 9 : getStartPageLink()",
      ng-click="setPage(p)"
      ng-disabled="isPage(p)"
    ) {{ p + 1 }}
    
    a(ng-click="setPage(pageNumber + 1)", ng-disabled="isPage(getPages().length - 1)") next page >
    a(ng-click="setPage(getPages().length - 1)", ng-disabled="isPage(getPages().length - 1)") last page >>
